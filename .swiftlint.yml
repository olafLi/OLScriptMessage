###
# Swiftlint configuration file.
# Latest version supported: 0.16.1
# Any newer version hasn't been checked yet and might not follow the style guide.
#
# To update your local version of this file, execute the following command line:
# curl https://raw.githubusercontent.com/kevindelord/swift-style-guide/master/.swiftlint.yml > .swiftlint.yml
###

disabled_rules: # Rule identifiers to exclude from running
  - force_cast
  - identifier_name
  - attributes
  - redundant_string_enum_value
  - cyclomatic_complexity
included:
  - OLScriptMessage
excluded: # paths to ignore during linting. overridden by `included`.

# rule parameters
file_length:
  - 600 #warning
  - 800 #error

function_body_length:
  - 60 #warning
  - 80 #error

line_length:
  - 300 #warning
  - 350 #error

type_body_length:
  - 400 #warning
  - 500 #error

large_tuple:
  - 4 #warning
  - 6 #error

opt_in_rules:
  - closure_end_indentation # 结尾应该有相同的压痕线开始了。
  - closure_spacing
  - closing_brace
  - closure_parameter_position
  - conditional_returns_on_newline #条件状态都应该在下一行返回
  - empty_enum_arguments
  # - empty_count
  - compiler_protocol_init
  - dynamic_inline
  # - file_header
  - explicit_init
  - prohibited_super_call
  - mark
  - control_statement
  - statement_position
  - opening_brace
  - empty_parameters
  - function_parameter_count
  - legacy_cggeometry_functions
  - trailing_comma
  - legacy_constructor #遗留版本构造器
  - legacy_nsgeometry_functions
  - overridden_super_call
  - redundant_void_return
  - type_name
  - syntactic_sugar
  - switch_case_on_newline
  - shorthand_operator
  # - sorted_imports
  - nesting
  # - leading_whitespace
  # - object_literal
  # - frist_where
  # - explicit_type_interface
  # - explicit_top_level_acl
  # - first_where #Prefer using .first(where:) over .filter { }.first in collections.
  # - force_unwrapping # Force unwrapping should be avoided.
  # - implicit_return #Prefer implicit returns in closures.
  # - implicitly_unwrapped_optional #Implicitly unwrapped optionals should be avoided when possible.
  - let_var_whitespace #Let and var should be separated from other statements by a blank line.
  - multiline_parameters # Functions and methods parameters should be either on the same line, or one per line.
  - nimble_operator # Prefer Nimble operator overloads over free matcher functions.
  # - no_extension_access_modifier # Prefer not to use extension access modifiers
  - number_separator
  - operator_usage_whitespace
  - redundant_nil_coalescing
  - redundant_optional_initialization
  - unneeded_parentheses_in_closure_argument
